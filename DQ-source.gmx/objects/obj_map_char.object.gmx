<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_char_map</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-101</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_char_map_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_move = true;
can_stop = true;
can_select = false;

goto = false;
x = 464+8;
y = 240;
/*view_xview[0] = x-160;
view_yview[0] = y-120;*/
stg = -1;

if(global.prof&gt;0){
ini_open("save_file_"+string(global.prof)+".ini");
ini_write_real("save","save",1);
ini_close();
scr_data_save_game(string(global.prof));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_goto_level(stg);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_stop = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_xview[0] = x-160;
view_yview[0] = y-120;

if((place_meeting(x-abs(hspeed)-1,y,obj_solid) &amp;&amp; hspeed&lt;0)) {
    x+=abs(hspeed)/2;
    hspeed = 0;
}
if((place_meeting(x+abs(hspeed)+1,y,obj_solid) &amp;&amp; hspeed&gt;0)) {
    x-=abs(hspeed)/2;
    hspeed = 0;
}
if((place_meeting(x,y-abs(vspeed)-1,obj_solid) &amp;&amp; vspeed&lt;0)) {
    y+=abs(vspeed)/2;
    vspeed = 0;
}
if((place_meeting(x,y+abs(vspeed)+1,obj_solid) &amp;&amp; vspeed&gt;0)) {
    y-=abs(vspeed)/2;
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
can_move = can_move*!goto*!instance_exists(obj_part);

if(keyboard_check_pressed(global.up) &amp;&amp; can_move){
    vspeed = -6;
    can_move = false;
    can_stop = false;
    alarm[0] = 4;
}

if(keyboard_check_pressed(global.down)&amp;&amp; can_move){
    vspeed = 6;
    can_move = false;
    can_stop = false;
    alarm[0] = 4;
}

if(keyboard_check_pressed(global.left)&amp;&amp; can_move){
    hspeed = -6;
    can_move = false;
    can_stop = false;
    alarm[0] = 4;
}

if(keyboard_check_pressed(global.right)&amp;&amp; can_move){
    hspeed = 6;
    can_move = false;
    can_stop = false;
    alarm[0] = 4;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_map_inter_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!can_move &amp;&amp; distance_to_point(other.x+8,other.y+8)&lt;1 &amp;&amp; can_stop*!instance_exists(obj_part)){
    hspeed = 0;
    vspeed = 0;
    x = other.x+8;
    y = other.y;
    can_move = true;
    sound_play(fx_select);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_map_goto_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!can_move &amp;&amp; distance_to_point(other.x+8,other.y+8)&lt;1 &amp;&amp; can_stop*!instance_exists(obj_part)){
    hspeed = 0;
    vspeed = 0;
    x = other.x+8;
    y = other.y;
    can_move = true;
    sound_play(fx_select);
}
if(keyboard_check_pressed(global.enter) &amp;&amp; !goto &amp;&amp; can_move*!instance_exists(obj_part)){
    hspeed = 0;
    vspeed = 0;
    x = other.x+8;
    y = other.y;
    goto = true;
    scr_part_goto(x,y);
    alarm[1] = 15;
    stg = other.stg;
    sound_play(fx_confirm);
 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(place_meeting(x+hspeed,y,obj_solid)){
    if(hspeed&gt;0)move_contact_solid(0,abs(hspeed));
    if(hspeed&lt;0)move_contact_solid(180,abs(hspeed));
    hspeed = 0;
}

if(place_meeting(x,y+vspeed,obj_solid)){
    if(vspeed&gt;0)move_contact_solid(270,abs(vspeed));
    if(vspeed&lt;0)move_contact_solid(90,abs(vspeed));
    vspeed = 0;
}
if(place_meeting(x+hspeed,y+vspeed,obj_solid)){
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
